padding 中规中矩，性格温婉平和

一、padding 与元素的尺寸

1、对于block水平元素
1.padding值暴走，一定会影响尺寸
2.width非auto,padding影响尺寸
3.width为auto或box-sizing为border-box，同时padding值没有暴走，不影响尺寸

2、对于inline水平元素
水平padding影响尺寸，垂直padding不影响尺寸，但是会影响背景色（占据空间）

如何利用这一特性？
高度可控的分割线
1.直接使用字符：注册|退出登录
2.inline-block：注册|退出登录
3.使用inline padding：注册|退出登录
注册<span></span>退出登录
span{ padding:16px 6px 1px; margin-left:12px; border-left:2px solid; font-size:0; }

二、padding负值和百分比值

1、padding不支持任何形式的负值

2、block水平元素的padding百分比值
padding百分比均是相对于宽度计算的

如何利用这一特性？
轻松实现一个正方形,比如移动端页面背景
div{ padding:50%;}

3、inline水平元素的padding百分比值
1.同样相对于宽度计算
2.默认的高度、宽度细节有差异
空inline元素+padding高宽也不相等（设置font-size:0;会相等）
<span></span>
span{
	padding:50%;	
	font-size:0;
}
inline元素的垂直padding会让“幽灵空白节点”显现，也就是规范中的“strut”出现
3.padding会断行

三、标签元素的内置padding

1、ol/ul列表（有序/无序）
1.ol/li元素内置padding-left，但是单位是px不是em（文字12-14px,padding-left:22-25;可以实现左对齐）
2.例如Chrome浏览器下是40px
3.所以如果字号很小，间距就会很开
4.所以如果字号很大，序号就会爬到容器外面

2、表单元素的内置padding
1.所有浏览器input/textarea输入框内置padding
2.所有浏览器button按钮内置padding
3.部分浏览器select下拉内置padding,如FireFox,IE8+可以设置padding
4.所有浏览器radio/chexkbox单复选框无内置padding
5.button按钮元素的padding最难控制

3、button表单按钮padding
1.Chrome浏览器(√)
2.FireFox浏览器
设置button{ padding:0;}左右依然有padding!
可以用button::-moz-focus-inner{ padding:0;}使按钮左右没有padding
3.IE浏览器
IE7按钮上文字越多，左右padding越大！
可以用button{ overflow:visible;}
4.padding与高度计算的不兼容
button{
	line-height:20px;
	padding:10px;
	border:none;
}
正常来讲高度应该是40px
IE7          45px 	×
IE8+	     40px	√
FireFox	     42px	×
Chrome	     40px	√

建议：用label标签
<button id="btn"></button>
<label for="btn">按钮</label>		
label{
	display:inline-block;
	line-height:20px;
	padding:10px;
}
IE7          40px 	√
IE8+	     40px	√
FireFox	     40px	√
Chrome	     40px	√

四、padding与图形绘制

1、实现大队长的3道杠
不借助伪元素，只用div
<div class="line-tri"></div>
.line-tri{
	width:150px; height:30px;
	padding: 15px;0；		<!--三道杠上下之间的距离-->
	border-top:30px solid;		<!--上边的杠-->
	border-bottom:30px solid;	<!--下边的杠-->
	background-color:currentColor;	<!--中间的杠-->
	background-clip:content-box;	<!--使背景色只在内容区域显示-->
}

2、实现白眼效果
不借助伪元素，只用div
<div class="eye"></div>
.eye{
	width:150px; height:150px;
	padding:10px;
	border:10px; solod;
	border-redius:50%;
	background-color:currentColor;
	background-clip:content-box;
}

五、padding与布局

1、使用百分比单位构建固定比例布局结构
移动端1:1头图布局
div{padding:50%;}

2、配合margin等高布局(给margin-bottom很大的负值&padding-bottom很大的填充缺失的空间)
.box{overflow:hidden; resize:vertical;}
.child-orange,
.child-green{margin-bottom:-600px; padding-bottom:600px;}
.child-orange{float:left; background:orange;}
.child-orange{float:left; background:green;}

3、两栏自适应布局
1.padding在容器上
<div class="pbox">
<img src="xx.jpg">图片
</div>

.pbox{
	padding-left:120px;
}
.pbox img{
	float:left;
	margin-left:-120px;
}

2.padding在子元素上
<div>
	<img src="xx.jpg">图片
	<div class="auto">文字</div>
</div>

img{
	float:left;
}
.auto{
	padding-left:120px;
}